stages:
  - deploy

# Common deploy job template
.deploy_job_template: &deploy_job_definition
  image:
    name: ${NODE}
    entrypoint: ['']
  tags:
    - shared-tests
  allow_failure: true

.deploy_script_template: &deploy_script_definition
  script:
    - npm i
    - npm run build
    - rm -rf /data
    - ln -s "${CI_PROJECT_DIR}/public" "/data"
    - chown -R nginx:nginx /data
    - echo  'server { listen 80 default_server; root /data; index index.html index.htm; try_files $uri $uri/ /index.html =404; }' > /etc/nginx/conf.d/default.conf
    - echo "YOUR LINK - https://${PROXY_build_DOMAIN}"
    - nginx

deploy:dev:
  stage: deploy
  when: manual
  <<: *deploy_job_definition
  variables:
    PROXY_build_HTTPS: '443:80'
    PROXY_build_HTTP: '80:80'
    PROXY_build_DOMAIN: dev-${MAIN_DOMAIN}
    APP_JS_SDK_URL: https://dev-livetag-sdk.ci.gbksoft.net/lib/livetag.js
    APP_WIDGET_SHOP_URI: shop1
  environment:
    name: dev
    url: https://${PROXY_build_DOMAIN}
  cache:
    key: dev-modules
    paths:
      - node_modules/
  <<: *deploy_script_definition

deploy:test:
  stage: deploy
  when: manual
  <<: *deploy_job_definition
  variables:
    PROXY_build_HTTPS: '443:80'
    PROXY_build_HTTP: '80:80'
    PROXY_build_DOMAIN: test-${MAIN_DOMAIN}
    APP_JS_SDK_URL: https://test-livetag-sdk.ci.gbksoft.net/lib/livetag.js
    APP_WIDGET_SHOP_URI: shop1
  environment:
    name: test
    url: https://${PROXY_build_DOMAIN}
  cache:
    key: test-modules
    paths:
      - node_modules/
  <<: *deploy_script_definition

deploy:live:
  stage: deploy
  when: manual
  <<: *deploy_job_definition
  variables:
    PROXY_build_HTTPS: '443:80'
    PROXY_build_HTTP: '80:80'
    PROXY_build_DOMAIN: live-${MAIN_DOMAIN}
    APP_JS_SDK_URL: https://live-livetag-sdk.ci.gbksoft.net/lib/livetag.js
    APP_WIDGET_SHOP_URI: shop1
  environment:
    name: live
    url: https://${PROXY_build_DOMAIN}
  cache:
    key: live-modules
    paths:
      - node_modules/
  only:
    - master
    - develop
    - tags
  <<: *deploy_script_definition

prod:build:
  stage: deploy
  when: manual
  image: ${CI_REGISTRY}/int/images/docker:latest
  variables:
    AWS_ACCESS_KEY_ID: ${AWS_ECS_ACCESS_KEY_ID}
    AWS_SECRET_ACCESS_KEY: ${AWS_ECS_SECRET_ACCESS_KEY}
  script:
    - echo "Build the image ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/demo-shop:${CI_COMMIT_SHORT_SHA}"
    - . ./.gitlab-ci/build_image.sh
  only:
    - tags
  tags:
    - docker

prod:deploy:
  stage: deploy
  when: manual
  image: ${CI_REGISTRY}/int/images/ecs-deploy:latest
  variables:
    AWS_ACCESS_KEY_ID: ${AWS_ECS_ACCESS_KEY_ID}
    AWS_SECRET_ACCESS_KEY: ${AWS_ECS_SECRET_ACCESS_KEY}
  script:
    - |
       echo "Check the image ${CI_COMMIT_SHORT_SHA}"
       aws ecr describe-images \
           --repository-name demo-shop \
           --image-id="[{\"imageTag\":\"${CI_COMMIT_SHORT_SHA}\"}]"
       echo "Deploy demo-shop"
       ecs deploy livetag demo-shop \
           --tag ${CI_COMMIT_SHORT_SHA} \
           --diff \
           --timeout 900 \
           --deregister
       echo "Deploy complete"
  only:
    - tags
  tags:
    - docker
  environment:
    name: Production
    url: ${URL_PROD}
